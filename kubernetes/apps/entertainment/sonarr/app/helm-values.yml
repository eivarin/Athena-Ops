controllers:
  app:
    enabled: true
    type: deployment
    replicas: 1
    pod:
      hostname: &app sonarr
      annotations:
        app.kubernetes.io/name: *app
        app.kubernetes.io/instance: *app
    containers:
      app:
        image:
          repository: lscr.io/linuxserver/sonarr
          tag: 4.0.14
          pullPolicy: IfNotPresent
        env:
          PUID: 1000
          PGID: 1000
          TZ: ${TIMEZONE}
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
          limits:
            memory: 500Mi

        probes:
          liveness: &probe
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /ping
                port: &port 8989
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probe


defaultPodOptions:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: node-priority
                operator: In
                values:
                - "1"
        - weight: 2
          preference:
            matchExpressions:
              - key: node-priority
                operator: In
                values:
                - "2"

service:
  web:
    controller: app
    ports:
      http:
        port: *port

route:
  main:
    enabled: true
    kind: HTTPRoute
    parentRefs:
      - name: traefik-private-default
        namespace: network
        sectionName: https-wildcard-secret-private-domain
    hostnames:
      - "sonarr.${SECRET_PRIVATE_DOMAIN}"
    rules:
      - backendRefs:
        - name: *app
          port: *port
        filters:
          - type: ExtensionRef
            extensionRef:
              group: traefik.io
              kind: Middleware
              name: authentik


persistence:
  sonarr-config:
    existingClaim: sonarr-config
    globalMounts:
      - path: /config
        readOnly: false
  media:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: entertainment-storage-nfs-media
    globalMounts:
      - path: /shared/Media
        readOnly: false

