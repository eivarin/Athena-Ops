controllers:
  app:
    enabled: true
    type: deployment
    replicas: 1
    pod:
      hostname: &name jellyfin
      annotations:
        app.kubernetes.io/name: *name
        app.kubernetes.io/instance: *name
    containers:
      app:
        image:
          repository: jellyfin/jellyfin
          tag: 10.10.5
          pullPolicy: IfNotPresent
        env:
          PUID: 1000
          PGID: 1000
          TZ: ${TIMEZONE}
        resources:
          requests:
            gpu.intel.com/i915: "1"
            memory: 1Gi
          limits:
            gpu.intel.com/i915: "1"
            memory: 4Gi

        probes:
          liveness: &probe
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /
                port: &port 8096
              initialDelaySeconds: 20
              periodSeconds: 30
              timeoutSeconds: 20
              failureThreshold: 5
          readiness: *probe

service:
  web:
    controller: app
    ports:
      http:
        port: *port

ingress:
  private:
    annotations: 
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    className: traefik-private
    hosts:
      - host: &private-path jellyfin.${SECRET_PRIVATE_DOMAIN}
        paths:
          - path: /
            service:
              identifier: web
              port: http
    tls:
      - secretName: ${SECRET_PRIVATE_DOMAIN//./-}-tls
        hosts:
          - *private-path
  public:
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      cert-manager.io/cluster-issuer: letsencrypt-production
      external-dns.alpha.kubernetes.io/target: ${SECRET_PUBLIC_DOMAIN1}
    className: traefik-public
    hosts:
      - host: &jellyfin-public-path jellyfin.${SECRET_PUBLIC_DOMAIN1}
        paths:
          - path: /
            service:
              identifier: web
              port: http
    tls:
      - secretName: jellyfin-${SECRET_PUBLIC_DOMAIN1//./-}-tls
        hosts:
          - *jellyfin-public-path

persistence:
  config:
    enabled: true
    existingClaim: jellyfin-config
    globalMounts:
      - path: /config
        readOnly: false
      - path: /var/lib/jellyfin/root
        readOnly: false
        subPath: root
  cache:
    enabled: true
    type: emptyDir
    globalMounts:
      - path: /cache
        readOnly: false
  media:
    enabled: true
    type: persistentVolumeClaim
    existingClaim:  entertainment-storage-nfs-media
    globalMounts:
      - path: /shared/Media
        readOnly: false

