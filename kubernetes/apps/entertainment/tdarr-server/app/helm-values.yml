controllers:
  app:
    enabled: true
    type: deployment
    replicas: 1
    pod:
      hostname: ${app}
      annotations:
        app.kubernetes.io/name: ${app}
        app.kubernetes.io/instance: ${app}
    containers:
      app:
        image:
          repository: ghcr.io/haveagitgat/tdarr
          tag: 2.51.03
          pullPolicy: IfNotPresent
        env:
          internalNode: false
          TZ: ${TIMEZONE}
        resources:
          requests:
            cpu: 50m
            memory: 256Mi
          limits:
            memory: 1Gi
        probes:
          liveness: &probe
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /api/v2/status
                port: ${web_port}
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probe


defaultPodOptions:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: node-priority
                operator: In
                values:
                - "1"
        - weight: 2
          preference:
            matchExpressions:
              - key: node-priority
                operator: In
                values:
                - "2"

service:
  web:
    controller: app
    ports:
      http:
        port: ${web_port}
  lb:
    controller: app
    type: LoadBalancer
    loadBalancerIP: ${SECRET_TDARR_IP}
    ports:
      tdarr-server-port:
        enabled: true
        protocol: TCP
        port: ${lb_port}

route:
  main:
    enabled: true
    kind: HTTPRoute
    parentRefs:
      - name: traefik-private-default
        namespace: network
        sectionName: https-wildcard-secret-private-domain
    hostnames:
      - ${host}
    rules:
      - backendRefs:
        - name: tdarr-server-web
          port: ${web_port}
        # filters:
        #   - type: ExtensionRef
        #     extensionRef:
        #       group: traefik.io
        #       kind: Middleware
        #       name: authentik


persistence:
  tdarr-server:
    existingClaim: tdarr-server
    globalMounts:
      - path: /app/configs
        subPath: config
      - path: /app/server
        subPath: server
  media:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: entertainment-storage-nfs-media
    globalMounts:
      - path: /shared/Media
        readOnly: false

