controllers:
  app:
    enabled: true
    type: deployment
    replicas: 1

    # pod:
    #   securityContext:
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     runAsNonRoot: true
    #     fsGroupChangePolicy: "OnRootMismatch"

    containers:
      app:
        image:
          repository: ghcr.io/linkwarden/linkwarden
          tag: v2.12.2
          pullPolicy: IfNotPresent

        env:
          NEXTAUTH_URL: https://linkwarden.${SECRET_PUBLIC_DOMAIN1}/api/v1/auth
          STORAGE_FOLDER: "config" # Will always end up as /data/STOREAGE_FOLDER so eg /data/config
          HOME: /data/config
        envFrom:
          - secretRef:
              name: linkwarden-secrets

        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            memory: 2Gi

        probes:
          liveness:
            enabled: true
            type: TCP
            port: &port 3000
          readiness:
            enabled: true
            type: HTTP
            port: *port
            path: /
          startup:
            enabled: true
            type: HTTP
            port: *port
            path: /
            spec:
              initialDelaySeconds: 0
              timeoutSeconds: 1
              periodSeconds: 10
              failureThreshold: 30

defaultPodOptions:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: node-priority
                operator: In
                values:
                  - "1"
        - weight: 2
          preference:
            matchExpressions:
              - key: node-priority
                operator: In
                values:
                  - "2"

service:
  linkwarden:
    controller: app
    ports:
      http:
        port: *port

ingress:
  linkwarden-public:
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      cert-manager.io/cluster-issuer: letsencrypt-production
      external-dns.alpha.kubernetes.io/target: ${SECRET_PUBLIC_DOMAIN1}
    className: traefik-public
    hosts:
      - host: &linkwarden-public-path linkwarden.${SECRET_PUBLIC_DOMAIN1}
        paths:
          - path: /
            service:
              identifier: linkwarden
              port: http
    tls:
      - secretName: linkwarden-${SECRET_PUBLIC_DOMAIN1//./-}-tls
        hosts:
          - *linkwarden-public-path

persistence:
  linkwarden-data:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: linkwarden-data
    globalMounts:
      - path: /data/config
        readOnly: false
